#include <iostream>
#include <clocale>
#include <vector>

#include "Point.h"
#include "Rectangle.h"
#include "Figure2D.h"

using namespace std;

/**
 * @brief Точка входа в программу.
 * Устанавливает русскую локаль, создает объект прямоугольника,
 * позволяет пользователю вводить новые координаты и выводит
 * информацию о прямоугольнике.
 * @return Код завершения.
 */

int main() {
    setlocale(LC_ALL, "rus");
    // Согласно тексту задания
    // необходимо явно ограничить возможность
    // создания вершин прямоугольника не
    // за пределами экрана.
    //
    // Экран представляем абстрактным размером 640x480.
    const Point maxScreenResolution(640, 480); // Максимальное разрешение экрана
    // Коллекцию создаём согласно тексту задания.
    // Коллекция должна быть элементов именно базового типа.
    // Но в неё нужно разместить элементы-наследники.
    // Невозможно продемонстрировать полиморфное поведение
    // объектов класса.
    vector<Figure2D*> figures;
    // Ввод 3х прямоугольников.
    try {
        // Допустим, для примера, запросим у пользователя
        // создание 3х прямоугольников.
        //
        // По заданию нет требования относительно количества элементов
        // в коллекции.
        for (int i = 0; i < 4; i++) {
            Point* p = new Point();
            cout << "Point " << i + 1 << " (x y): ";
            cin >> *p;
            figures.push_back(p);
        }
    }
    catch (const char* msg) { // Обработка исключений
        cout << "Ошибка: " << msg << endl; // Выводим сообщение об ошибке
    }
    // Вывод фигур
    for (size_t i = 0; i < figures.size(); i++) {
        cout << *figures[i] << endl;
    }
    // Освобождение памяти на куче
    for (size_t i = 0; i < figures.size(); i++) {
        delete figures[i];
    }
    figures.clear();
    return 0; // Возвращаем код завершения
}