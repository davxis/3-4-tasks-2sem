#pragma once

#include <iostream>
#include <string>

class Point {
private:
    double x; ///< Координата X точки
    double y; ///< Координата Y точки

    /*
     * @brief Конструктор для создания точки с заданными координатами.
     * @param x Координата X точки.
     * @param y Координата Y точки.
     */
public:
    Point();

    Point(const double x, const double y);

    /*
     * @brief Оператор сравнения на равенство.
     * Проверяет, равны ли текущая точка и другая точка.
     * @param other Другая точка для сравнения.
     * @return true, если точки равны; false в противном случае.
     */
    bool operator==(const Point& other) const;

    /*
     * @brief Оператор сравнения на неравенство.
     * Проверяет, не равны ли текущая точка и другая точка.
     * @param other Другая точка для сравнения.
     * @return true, если точки не равны; false в противном случае.
     */
    bool operator!=(const Point& other) const;

    /*
    * @brief Проверка координат точки на превышение лимитов.
    * Возвращает true, если хотя бы одна из координат текущей точки
    * больше или равна соответствующим координатам другой точки.
    * @param limits Другая точка для сравнения.
    * @return true, если текущая точка больше или равна другой; false в противном случае.
    */
    bool exceedsLimits(const Point& limits);

    /*
     * @brief Перегрузка оператора вывода для точки.
     * Выводит координаты точки в поток вывода.
     * @param os Поток вывода, в который будет записано представление точки.
     * @param p Точка, которую нужно вывести.
     * @return Ссылку на поток вывода для поддержки цепочки операций.
     */
    friend std::ostream& operator<<(std::ostream& os, const Point& p);

    /*
     * @brief Перегрузка оператора ввода для точки.
     * Считывает координаты точки из потока ввода.
     * @param is Поток ввода, из которого будут считаны координаты.
     * @param p Точка, в которую будут записаны считанные значения.
     * @return Ссылку на поток ввода для поддержки цепочки операций.
     */
    friend std::istream& operator>>(std::istream& is, Point& p);

    /*
     * @brief Преобразует точку в строковое представление.
     * Возвращает строку, содержащую координаты точки в формате "(x, y)".
     * @return Строковое представление точки.
     */
    std::string ToString() const;

    double getX() const;

    double getY() const;
};
